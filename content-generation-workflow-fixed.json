{
  "name": "Content Generation Workflow",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "generate-content",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        240,
        300
      ],
      "id": "webhook-trigger-001",
      "name": "Webhook Trigger",
      "webhookId": "generate-content-webhook"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "extract-videoid-001",
              "name": "videoId",
              "value": "={{ $json.body.videoId }}",
              "type": "string"
            },
            {
              "id": "extract-prompt-nombre-002",
              "name": "promptNombre",
              "value": "={{ $json.body.prompt.nombre }}",
              "type": "string"
            },
            {
              "id": "extract-prompt-contenido-003", 
              "name": "promptContenido",
              "value": "={{ $json.body.prompt.contenido }}",
              "type": "string"
            },
            {
              "id": "extract-callback-004",
              "name": "callbackUrl",
              "value": "={{ $json.body.callbackUrl }}",
              "type": "string"
            },
            {
              "id": "extract-temas-005",
              "name": "ultimosTemasPublicados",
              "value": "={{ $json.body.ultimosTemasPublicados || [] }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        460,
        300
      ],
      "id": "extract-data-node",
      "name": "Extract Data"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "validate-videoid-001",
              "leftValue": "={{ $json.videoId }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "isNotEmpty",
                "singleValue": true
              }
            },
            {
              "id": "validate-prompt-002",
              "leftValue": "={{ $json.promptContenido }}",
              "rightValue": "",
              "operator": {
                "type": "string", 
                "operation": "isNotEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        680,
        300
      ],
      "id": "validate-input-node",
      "name": "Validate Input"
    },
    {
      "parameters": {
        "jsCode": "// Crear el prompt mejorado con los temas anteriores\nconst inputData = $input.first().json;\n\nconst ultimosTemasPublicados = inputData.ultimosTemasPublicados || [];\nconst temasTexto = ultimosTemasPublicados.length > 0 \n  ? `\\nTEMAS A EVITAR (no repetir):\\n- ${ultimosTemasPublicados.join('\\n- ')}`\n  : '';\n\nconst promptCompleto = `${inputData.promptContenido}${temasTexto}\\n\\nGenera contenido completamente original y diferente a los temas anteriores. Responde ÚNICAMENTE con un JSON válido con esta estructura:\\n{\\n  \"titulo\": \"Título del video\",\\n  \"tema\": \"Tema específico\",\\n  \"guion\": \"Guión completo del video\",\\n  \"textoLinkedin\": \"Post para LinkedIn\",\\n  \"tweet\": \"Tweet corto\",\\n  \"descripcion\": \"Descripción del video\"\\n}`;\n\nreturn [{\n  json: {\n    ...inputData,\n    promptCompleto: promptCompleto\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        900,
        220
      ],
      "id": "prepare-prompt-node",
      "name": "Prepare AI Prompt"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.promptCompleto }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "Eres un especialista en creación de contenido para videos. Tu tarea es generar contenido único, atractivo y profesional en español.\\n\\nIMPORTANTE: Responde ÚNICAMENTE con el JSON solicitado, sin texto adicional ni markdown."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        1120,
        220
      ],
      "id": "ai-agent-node",
      "name": "AI Content Generator"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\\n  \"titulo\": \"titulo\",\\n  \"tema\": \"tema\",\\n  \"guion\": \"guion\",\\n  \"textoLinkedin\": \"textoLinkedin\", \\n  \"tweet\": \"tweet\",\\n  \"descripcion\": \"descripcion\"\\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        1120,
        380
      ],
      "id": "output-parser-node", 
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "model": "gpt-4-turbo-preview",
        "options": {
          "temperature": 0.8,
          "maxTokens": 2000
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        1120,
        500
      ],
      "id": "openai-model-node",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "openai-credentials",
          "name": "OpenAI API"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "check-output-001",
              "leftValue": "={{ $json.output.titulo }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "isNotEmpty", 
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1340,
        220
      ],
      "id": "validate-output-node",
      "name": "Validate Generation"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "success-response-001",
              "name": "success",
              "value": "true",
              "type": "boolean"
            },
            {
              "id": "success-videoid-002", 
              "name": "videoId",
              "value": "={{ $('Extract Data').item.json.videoId }}",
              "type": "string"
            },
            {
              "id": "success-content-003",
              "name": "content",
              "value": "={{ $json.output }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1560,
        140
      ],
      "id": "success-response-node",
      "name": "Success Response"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "error-response-001",
              "name": "success",
              "value": "false",
              "type": "boolean"
            },
            {
              "id": "error-videoid-002",
              "name": "videoId", 
              "value": "={{ $('Extract Data').item.json.videoId }}",
              "type": "string"
            },
            {
              "id": "error-message-003",
              "name": "error",
              "value": "Error al generar contenido",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1560,
        300
      ],
      "id": "error-response-node",
      "name": "Error Response"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "check-callback-001",
              "leftValue": "={{ $('Extract Data').item.json.callbackUrl }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "isNotEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1780,
        220
      ],
      "id": "check-callback-node",
      "name": "Check Callback"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Extract Data').item.json.callbackUrl }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ JSON.stringify($json) }}",
        "options": {
          "timeout": 30000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2000,
        220
      ],
      "id": "send-callback-node",
      "name": "Send Callback"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ JSON.stringify({ received: true, videoId: $('Extract Data').item.json.videoId, status: 'processing' }) }}"
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 2,
      "position": [
        2220,
        220
      ],
      "id": "webhook-response-node",
      "name": "Webhook Response"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "validation-error-001",
              "name": "success", 
              "value": "false",
              "type": "boolean"
            },
            {
              "id": "validation-error-002",
              "name": "error",
              "value": "Datos de entrada inválidos",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set", 
      "typeVersion": 3.4,
      "position": [
        900,
        380
      ],
      "id": "validation-error-node",
      "name": "Validation Error"
    }
  ],
  "connections": {
    "Webhook Trigger": {
      "main": [
        [
          {
            "node": "Extract Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Data": {
      "main": [
        [
          {
            "node": "Validate Input", 
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validate Input": {
      "main": [
        [
          {
            "node": "Prepare AI Prompt",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Validation Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare AI Prompt": {
      "main": [
        [
          {
            "node": "AI Content Generator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Content Generator": {
      "main": [
        [
          {
            "node": "Validate Generation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "AI Content Generator",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Content Generator",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Validate Generation": {
      "main": [
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Response", 
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Success Response": {
      "main": [
        [
          {
            "node": "Check Callback",
            "type": "main", 
            "index": 0
          }
        ]
      ]
    },
    "Error Response": {
      "main": [
        [
          {
            "node": "Check Callback",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Callback": {
      "main": [
        [
          {
            "node": "Send Callback",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Webhook Response",
            "type": "main", 
            "index": 0
          }
        ]
      ]
    },
    "Send Callback": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validation Error": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "active": false,
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "versionId": "content-gen-v1",
  "meta": {
    "templateCredsSetupCompleted": false,
    "instanceId": "content-generation-system"
  },
  "id": "ContentGenerationWorkflow",
  "tags": []
}